####################################################

include apt

#class { 'apt':
#  always_apt_update    => true,
#  disable_keys         => undef,
#  proxy_host           => false,
#  proxy_port           => '8080',
#  purge_sources_list   => false,
#  purge_sources_list_d => false,
#  purge_preferences_d  => false,
#  update_timeout       => undef,
#  fancy_progress       => undef
#}

### Install Deps Packages
$deps = [ 'build-essential',
          'debhelper',
          'python-software-properties',
          'dkms',
          'fakeroot',
          'graphviz',
          'linux-headers-generic',
          'python-all',
          'python-qt4',
          'python-zopeinterface',
          'python-twisted-conch',
          'python-twisted-web',
          'xauth',
          'openvswitch-datapath-dkms',
          'mininet',
          'maven',
]

### Export Env: Global %PATH for 'Exec'
Exec { path => [ '/bin/', '/sbin/' , '/usr/bin/', '/usr/sbin/', '/usr/local/bin' ] }

### Apt Update
exec { 'apt-update':
    command => "/usr/bin/apt-get update",
    user    => 'root',
    timeout  => '0',
}

package { $deps:
    ensure   => installed,
}

### Mininet
exec { 'service openvswitch-controller stop':
    user    => 'root',
    timeout  => '0',
    require => Package['mininet'],
}

exec { 'update-rc.d openvswitch-controller disable':
    user    => 'root',
    timeout  => '0',
    require => Package['mininet'],
}

exec { 'dpkg-reconfigure openvswitch-datapath-dkms':
    user    => 'root',
    timeout  => '0',
    require => Package['openvswitch-datapath-dkms'],
}

exec { 'service openvswitch-switch restart':
    user    => 'root',
    timeout  => '0',
    require => Exec['dpkg-reconfigure openvswitch-datapath-dkms'],
}

### Oracle Java/JDK 7
apt::ppa { 'ppa:webupd8team/java': }
package { 'oracle-java7-installer':
    ensure  => installed,
    responsefile => '/vagrant/resources/puppet/files/oracle-java.preseed',
    require => Apt::Ppa['ppa:webupd8team/java'],
}
exec{ "update-java-alternatives -s java-7-oracle":
    require => Package["oracle-java7-installer"],
    timeout  => '0',
}

### OpenDaylight with Original (Virtualization Edition)
exec { 'Download ODL-Virt Zip-File':
    command => 'wget http://nexus.opendaylight.org/content/repositories/opendaylight.release/org/opendaylight/integration/distributions-virtualization/0.1.1/distributions-virtualization-0.1.1-osgipackage.zip',
    creates  => '/home/vagrant/distributions-virtualization-0.1.1-osgipackage.zip',
    cwd     => '/home/vagrant',
    user    => 'vagrant',
    timeout  => '0',
}

exec { 'Extract ODL-Virt':
    command => 'unzip distributions-virtualization-0.1.1-osgipackage.zip',
    creates  => '/home/vagrant/opendaylight',
    cwd     => '/home/vagrant',
    user    => 'vagrant',
    timeout  => '0',
    require => Exec['Download ODL-Virt Zip-File'],
}

### RouteFlow & OpenDaylight-rfproxy
vcsrepo { '/home/vagrant/RouteFlow-Test/RouteFlow':
    ensure   => present,
    provider => git,
    user     => 'vagrant',
    source   => 'https://github.com/CPqD/RouteFlow.git',
    revision => '3f406b9c1a0796f40a86eb1194990cdd2c955f4d',
}

vcsrepo { '/home/vagrant/RouteFlow-Test/rfproxy-odl-plugin':
    ensure   => present,
    provider => git,
    user     => 'vagrant',
    source   => 'https://github.com/routeflow/odl-rfproxy.git',
    revision => '0c8074dbe6332792c0532d253d6fb82e44c9a86c',
}

vcsrepo { '/home/vagrant/RouteFlow-Test/opendaylight-with-rfproxy':
    ensure   => present,
    provider => git,
    user     => 'vagrant',
    source   => 'https://git.opendaylight.org/gerrit/p/controller.git',
    revision => '5ed4ad773ce1bdd1a1511fe8ce66e0db00ae0a3b',
}

exec  { 'Copy RF-Proxy-Source':
    command  => 'cp -af pom.xml ../opendaylight-with-rfproxy/opendaylight/ && cp -af src ../opendaylight-with-rfproxy/opendaylight/',
    user     => 'vagrant',
    cwd      => '/home/vagrant/RouteFlow-Test/rfproxy-odl-plugin',
    timeout  => '0',
    require  => [Vcsrepo['/home/vagrant/RouteFlow-Test/rfproxy-odl-plugin'], Vcsrepo['/home/vagrant/RouteFlow-Test/opendaylight-with-rfproxy']],
}

$odl_rfproxy_pom = '/home/vagrant/RouteFlow-Test/opendaylight-with-rfproxy/opendaylight/distribution/opendaylight/pom.xml'
file { 'Put RF-Proxy`s pom.xml':
    path     => $odl_rfproxy_pom,
    owner    => 'vagrant',
    group    => 'vagrant',
    source   => '/vagrant/resources/puppet/files/pom-odl.xml',
    replace  => true,
    require  => Vcsrepo['/home/vagrant/RouteFlow-Test/opendaylight-with-rfproxy'],
}

file { 'Put Build_ODL_RFProxy.sh':
    path     => '/home/vagrant/RouteFlow-Test/opendaylight-with-rfproxy/Build_ODL_RFProxy.sh',
    owner    => 'vagrant',
    group    => 'vagrant',
    mode     => 0755,
    source   => '/vagrant/resources/puppet/files/Build_ODL_RFProxy.sh',
    replace  => true,
    require  => [File['Put RF-Proxy`s pom.xml'], Exec['Copy RF-Proxy-Source']],
}

exec  { 'Run Build_ODL_RFProxy.sh':
    command  => 'bash Build_ODL_RFProxy.sh',
    user     => 'vagrant',
    cwd      => '/home/vagrant/RouteFlow-Test/opendaylight-with-rfproxy/',
    logoutput => true,
    timeout  => '0',
    require  => File['Put Build_ODL_RFProxy.sh'],
}

